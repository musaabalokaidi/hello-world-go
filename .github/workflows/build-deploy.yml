name: Docker Image CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
    build-and-release:
      name: Build Docker Image
      runs-on: ubuntu-latest  
      env:
        ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
        IMAGE_TAG: latest
      steps:  
          - name: Checkout
            uses: actions/checkout@v3    
            
          - name: Setup AWS ECR Details
            uses: aws-actions/configure-aws-credentials@v2
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{secrets.AWS_REGION}}


          - name: Login to Amazon ECR
            id: login-pf-aws-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: Build docker image
            env:
              ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            run: |
              docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}} .
            

          - name: Run Trivy vulnerability scanner
            env:
              ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            uses: aquasecurity/trivy-action@master
            with:
              image-ref: '${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:$IMAGE_TAG'
              format: 'table'
              exit-code: '1'
              ignore-unfixed: true
              vuln-type: 'os,library'
              severity: 'CRITICAL,HIGH'

          - name: Push the tagged docker image to Amazon ECR
            env:
              ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            run: |
              docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:$IMAGE_TAG
    deploy-dev:
      runs-on: 'ubuntu-latest'
      environment: 'dev'
      needs: build-and-release
      steps:
        - name: Setup AWS ECR Details
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{secrets.AWS_REGION}}
        
        - name: Login to Amazon ECR
          id: login-pf-aws-ecr
          uses: aws-actions/amazon-ecr-login@v1
        
        - name: push-to-dev
          env:
            ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
            ECR_RELEASE_REPO: ${{secrets.AWS_ECR_RELEASE_REPO}}
            ECR_DEPLOY_REPO: ${{secrets.AWS_ECR_DEPLOY_REPO}}
            IMAGE_TAG: latest
          run: |
            docker pull $ECR_REGISTRY/$ECR_RELEASE_REPO:$IMAGE_TAG
            docker tag $ECR_REGISTRY/$ECR_RELEASE_REPO:$IMAGE_TAG $ECR_REGISTRY/$ECR_DEPLOY_REPO:$IMAGE_TAG
            docker push $ECR_REGISTRY/$ECR_DEPLOY_REPO:$IMAGE_TAG